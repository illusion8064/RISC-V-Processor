ld x1, 0(x0)        // x1 = 0
ld x2, 8(x0)        // x2 = 2
ld x3, 16(x0)       // x3 = 3
add x4, x1, x2      // x4 = 2
add x5, x3, x1      // x5 = 3
beq x5, x3, 0       // x5 = x3, branch taken 
add x6, x2, x4      // x6 = 0 (not executed because branch jumps to undefined instruction)